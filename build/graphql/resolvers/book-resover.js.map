{"version":3,"sources":["../../../src/graphql/resolvers/book-resover.js"],"names":["BookResolver","Query","book","root","args","Promise","resolve","reject","Book","findOne","exec","err","res","books","find","populate","Mutation","addBook","title","imageUrl","price","authorId","publisher","save","editBook","_id","findOneAndUpdate","$set","deleteBook","findByIdAndRemove"],"mappings":"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","sourcesContent":["import Book from '../../models/Book';\r\n\r\nconst BookResolver = {\r\n    Query: {\r\n        book: (root, args) => {\r\n            return new Promise((resolve, reject) => {\r\n                Book.findOne(args).exec((err, res) => {\r\n                    err ? reject(err) : resolve(res);\r\n                });\r\n            });\r\n        },\r\n        books: () => {\r\n            return new Promise((resolve, reject) => {\r\n                Book.find({}).populate().exec((err, res) => {\r\n                    err ? reject(err) : resolve(res);\r\n                });\r\n            });\r\n        }\r\n    },\r\n    Mutation: {\r\n        addBook: (root, { title, imageUrl, price, authorId, publisher }) => {\r\n            const book = new Book({ title, imageUrl, price, authorId, publisher });\r\n\r\n            return new Promise((resolve, reject) => {\r\n                book.save((err, res) => {\r\n                    err ? reject(err) : resolve(res);\r\n                });\r\n            });\r\n        },\r\n        editBook: (root, { _id, title, imageUrl, price, authorId, publisher }) => {\r\n            return new Promise((resolve, reject) => {\r\n                Book.findOneAndUpdate({ _id }, { $set: { title, imageUrl, price, authorId, publisher } })\r\n                    .exec((err, res) => {\r\n                        err ? reject(err) : resolve(res);\r\n                    });\r\n            });\r\n        },\r\n        deleteBook: (root, { _id }) => {\r\n            return new Promise((resolve, reject) => {\r\n                Book.findByIdAndRemove({ _id }).exec((err, res) => {\r\n                    err ? reject(err) : resolve(res);\r\n                });\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport default BookResolver;"],"file":"book-resover.js"}