{"version":3,"sources":["../../../src/graphql/resolvers/author-resolver.js"],"names":["AuthorResolver","Query","author","root","args","Promise","resolve","reject","Author","findOne","exec","err","res","authors","find","populate","Mutation","addAuthor","name","save","editAuthor","_id","findOneAndUpdate","$set","deleteAuthor","findByIdAndRemove"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,cAAc,GAAG;AACnBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,IAAP,EAAgB;AACpB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,2BAAOC,OAAP,CAAeL,IAAf,EAAqBM,IAArB,CAA0B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpCD,UAAAA,GAAG,GAAGJ,MAAM,CAACI,GAAD,CAAT,GAAiBL,OAAO,CAACM,GAAD,CAA3B;AACH,SAFD;AAGH,OAJM,CAAP;AAKH,KAPE;AAQHC,IAAAA,OAAO,EAAE,mBAAM;AACX,aAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,2BAAOM,IAAP,CAAY,EAAZ,EAAgBC,QAAhB,GAA2BL,IAA3B,CAAgC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1CD,UAAAA,GAAG,GAAGJ,MAAM,CAACI,GAAD,CAAT,GAAiBL,OAAO,CAACM,GAAD,CAA3B;AACH,SAFD;AAGH,OAJM,CAAP;AAKH;AAdE,GADY;AAiBnBI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAE,mBAACd,IAAD,QAAoB;AAAA,UAAXe,IAAW,QAAXA,IAAW;AAC3B,UAAMhB,MAAM,GAAG,IAAIM,kBAAJ,CAAW;AAAEU,QAAAA,IAAI,EAAJA;AAAF,OAAX,CAAf;AAEA,aAAO,IAAIb,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCL,QAAAA,MAAM,CAACiB,IAAP,CAAY,UAACR,GAAD,EAAMC,GAAN,EAAc;AACtBD,UAAAA,GAAG,GAAGJ,MAAM,CAACI,GAAD,CAAT,GAAiBL,OAAO,CAACM,GAAD,CAA3B;AACH,SAFD;AAGH,OAJM,CAAP;AAKH,KATK;AAUNQ,IAAAA,UAAU,EAAE,oBAACjB,IAAD,SAAyB;AAAA,UAAhBkB,GAAgB,SAAhBA,GAAgB;AAAA,UAAXH,IAAW,SAAXA,IAAW;AACjC,aAAO,IAAIb,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,2BAAOc,gBAAP,CAAwB;AAAED,UAAAA,GAAG,EAAHA;AAAF,SAAxB,EAAiC;AAAEE,UAAAA,IAAI,EAAE;AAAEL,YAAAA,IAAI,EAAJA;AAAF;AAAR,SAAjC,EACKR,IADL,CACU,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChBD,UAAAA,GAAG,GAAGJ,MAAM,CAACI,GAAD,CAAT,GAAiBL,OAAO,CAACM,GAAD,CAA3B;AACH,SAHL;AAIH,OALM,CAAP;AAMH,KAjBK;AAkBNY,IAAAA,YAAY,EAAE,sBAACrB,IAAD,SAAmB;AAAA,UAAVkB,GAAU,SAAVA,GAAU;AAC7B,aAAO,IAAIhB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,2BAAOiB,iBAAP,CAAyB;AAAEJ,UAAAA,GAAG,EAAHA;AAAF,SAAzB,EAAkCX,IAAlC,CAAuC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjDD,UAAAA,GAAG,GAAGJ,MAAM,CAACI,GAAD,CAAT,GAAiBL,OAAO,CAACM,GAAD,CAA3B;AACH,SAFD;AAGH,OAJM,CAAP;AAKH;AAxBK;AAjBS,CAAvB;eA6CeZ,c","sourcesContent":["import Author from '../../models/Author';\r\n\r\nconst AuthorResolver = {\r\n    Query: {\r\n        author: (root, args) => {\r\n            return new Promise((resolve, reject) => {\r\n                Author.findOne(args).exec((err, res) => {\r\n                    err ? reject(err) : resolve(res);\r\n                });\r\n            });\r\n        },\r\n        authors: () => {\r\n            return new Promise((resolve, reject) => {\r\n                Author.find({}).populate().exec((err, res) => {\r\n                    err ? reject(err) : resolve(res);\r\n                });\r\n            });\r\n        }\r\n    },\r\n    Mutation: {\r\n        addAuthor: (root, { name }) => {\r\n            const author = new Author({ name });\r\n\r\n            return new Promise((resolve, reject) => {\r\n                author.save((err, res) => {\r\n                    err ? reject(err) : resolve(res);\r\n                });\r\n            });\r\n        },\r\n        editAuthor: (root, { _id, name }) => {\r\n            return new Promise((resolve, reject) => {\r\n                Author.findOneAndUpdate({ _id }, { $set: { name } })\r\n                    .exec((err, res) => {\r\n                        err ? reject(err) : resolve(res);\r\n                    });\r\n            });\r\n        },\r\n        deleteAuthor: (root, { _id }) => {\r\n            return new Promise((resolve, reject) => {\r\n                Author.findByIdAndRemove({ _id }).exec((err, res) => {\r\n                    err ? reject(err) : resolve(res);\r\n                });\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport default AuthorResolver;"],"file":"author-resolver.js"}